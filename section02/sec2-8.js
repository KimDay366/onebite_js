//section02 - 8. 호이스팅
// 식별자의 선언문이 스코프의 최 상단으로 끌어올려진 듯한 현상
// 함수 호이스팅 : 함수의 "작성"과 "선언"의 순서가 바뀌더라도, 문제 없이 함수가 구동 되는 것.
// 변수 호이스팅 : 변수 선언 후 변수(및 값)를 사용해야 정상 동작 하지만,
//               변수 선언 시 var를 사용하면 일단 선언은 한 걸로 되어서 호이스팅 되어 undefined가 출력 됨

console.log(num1);
let num1 = 123;
// error, let const 의 경우 변수의 값이 할당되지 않으면 TDZ(JS엔진의 사각지대, Temporal Dead Zone)에서 변수명이 대기함
// 변수의 값 자체가 할당되어야지만 JS 엔진 영역으로 들어와 역할을 수행함

console.log(num2); // undefined 출력
var num2 = 456;
